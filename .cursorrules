# AI Assistant Context for JAHmere Webb Freedom Portal

## Project Overview
- **Purpose**: JAHmere Webb Freedom Advocacy Platform - Justice reform portal
- **Status**: Production-ready, deployed on Vercel
- **Performance**: Championship level (27-131ms API responses, 9.0s builds)

## Tech Stack (CRITICAL - Follow Exactly)
- **Framework**: Next.js 15.4.2 (App Router) 
- **Language**: TypeScript 5.0+ (strict mode)
- **Runtime**: Node.js 20.x
- **Styling**: Tailwind CSS 3.0
- **Database**: Not implemented (static site)
- **Hosting**: Vercel Edge Network

## File Structure Patterns
```
src/app/                 # Next.js 15 App Router pages
src/components/          # React components  
src/components/ui/       # Reusable UI components (Radix + Tailwind)
src/lib/                 # Utilities and helpers
src/types/               # TypeScript type definitions
public/                  # Static assets
```

## Coding Conventions (MANDATORY)
- **Components**: Use arrow functions, TypeScript interfaces
- **Styling**: Tailwind classes only (no CSS modules/styled-components)
- **Imports**: Use @/ path aliases (`import { X } from '@/components/ui'`)
- **Client Components**: Add 'use client' only when needed
- **Error Boundaries**: Wrap client components with error handling

## NEVER Generate These Patterns
- ❌ Pages directory code (deprecated, use App Router)
- ❌ Class components (use functional only)
- ❌ CSS modules or styled-components (use Tailwind)
- ❌ Redux/Context API (this is a static site)
- ❌ API routes with databases (static site)
- ❌ `any` types (use proper TypeScript)

## ALWAYS Use These Patterns
- ✅ `'use client'` for interactive components
- ✅ Server components for static content (default)
- ✅ Proper TypeScript interfaces for props
- ✅ Error boundaries for client components  
- ✅ Tailwind for all styling
- ✅ @/ imports for absolute paths

## Component Patterns
```typescript
// Server Component (default)
export default function PageComponent() {
  return <div className="container mx-auto">Content</div>
}

// Client Component (interactive)
'use client'
export default function InteractiveComponent() {
  const [state, setState] = useState('')
  return <button onClick={() => setState('new')}>Click</button>
}

// Props with TypeScript
interface ComponentProps {
  title: string
  optional?: boolean
  children: React.ReactNode
}
```

## Common Imports
```typescript
// Next.js
import { Metadata } from 'next'
import Link from 'next/link'
import Image from 'next/image'

// React  
import { useState, useEffect } from 'react'

// UI Components (existing)
import { Button } from '@/components/ui/button'
import { Card } from '@/components/ui/card'
import { Container } from '@/components/ui/container'
```

## Project-Specific Context
- **Mission**: Advocacy for JAHmere Webb's freedom case (July 28th court date)
- **Audience**: Community supporters, legal professionals, advocates
- **Content**: Legal case information, community support, petition systems
- **Tone**: Professional, hopeful, action-oriented (not "divine" language)

## Performance Requirements
- API responses: <100ms (currently 27-131ms ✅)
- Build time: <15s (currently 9.0s ✅)  
- Core Web Vitals: Green scores required
- Bundle size: Optimized for Vercel Edge

## Deployment Context
- **Platform**: Vercel (vercel.json configured)
- **Domain**: july28freedom.vercel.app
- **Environment**: Production-ready
- **Cache**: Edge caching enabled
- **Analytics**: Vercel analytics integrated 